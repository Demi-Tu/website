{"version":3,"sources":["Home.js","Projects.js","About.js","App.js","serviceWorker.js","index.js"],"names":["Home","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","reactstrap_es","Component","Projects","props","_this","call","state","data","_this2","d3","then","d","setState","console","log","className","map","i","sm","name","description","target","rel","href","link","About","App","HashRouter","Link","to","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9bdea0ce.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Jumbotron } from 'reactstrap';\n\nexport class Home extends Component {\n    render() {\n        return <Jumbotron>Demi Tu</Jumbotron>\n    }\n}","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport { Card, Button, CardBody, CardTitle, CardText, Col } from 'reactstrap';\n\nexport class Projects extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: []\n        }\n    }\n    \n    componentDidMount() {\n        d3.csv(\"data/projects.csv\").then((d) => {\n            this.setState({ data: d });\n        });\n    }\n    \n    render() {\n        console.log(this.state.data)\n        return <div className=\"container\">Projects\n                 { this.state.data.map((d, i) => {\n                       return <Col sm=\"6\" key={ \"project\" + i }>\n                              <Card>\n                                <CardBody>\n                                  <CardTitle>\n                                    { d.name }\n                                  </CardTitle>\n                                  <CardText>\n                                    { d.description }\n                                  </CardText>\n                                  <a target=\"_blank\" rel=\"noopener noreferrer\" href={ d.link }>\n                                    <Button>Link</Button>\n                                  </a>\n                                </CardBody>\n                              </Card>\n                              <br/>\n                              </Col>\n                   \n                   }) }\n               </div>\n    }\n}","import React, { Component } from 'react';\n\nexport class About extends Component {\n    render() {\n        return <div className=\"container\">Hi, my name is Demi Tu. Graduating in June 2019, I'm currently studying Informatics, concentrating in Data Science at the University of Washington. As a hard-working, detailed-oriented individual, I have strong ability to articulate complex subject matter. I possess excellent communication and interpersonal skills: willing to help, listen, and learn. I'm passionate about coding and overcoming challenges that I face when solving programming problems. I'm always open to learn new skills with hope of making a positive impact using my knowledge. In my free time, I like to travel and explore new places with friends. I also enjoy doing all kinds of sports!</div>\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\n\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\nimport { Home } from './Home';\nimport { Projects } from './Projects';\nimport { About } from './About';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"container\">\n          <Link to=\"/\">Home</Link>\n          { ' ' }\n          <Link to=\"/projects\">Projects</Link>\n          { ' ' }\n          <Link to=\"/about\">About</Link>\n          <Route exact path=\"/\" component={ Home } />\n          <Route path=\"/projects\" component={ Projects } />\n          <Route path=\"/about\" component={ About } />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}